library("RColorBrewer")
library("RVAideMemoire")
library("data.table")
library("decontam")
library("ggpubr")
library("cowplot")
load(file = 'data/ASV_table.rds')
metadata <- read.table("data/metadata_16s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.16s) <- metadata
metadata <- read.table("data/metadata_18s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.18s) <- metadata
```R
remove.cont <- function(GM){
sample_data(GM)$is.neg <- sample_data(GM)$genotype == "nc"
contamdf.prev <- isContaminant(GM, method="prevalence", neg="is.neg", threshold = 0.05)
cont.remove <- subset(contamdf.prev, contaminant == "TRUE")
cont.remove <- row.names(cont.remove)
allTaxa = taxa_names(GM)
allTaxa <- allTaxa[!(allTaxa %in% cont.remove)]
GM <-  prune_taxa(allTaxa, GM)
GM <- subset_samples(GM, genotype != "nc")
return(GM)
}
ps.16s <- remove.cont(ps.16s)
ps.16s <- subset_taxa(ps.16s, Order !="Chloroplast")
ps.16s <- subset_taxa(ps.16s, Family !="Mitochondria")
ps.16s <- filter_taxa(ps.16s, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.18s <- remove.cont(ps.18s)
ps.18s <- subset_taxa(ps.18s, Class !="Streptophyta")
ps.18s <- filter_taxa(ps.18s, function (x) {sum(x > 0) > 1}, prune=TRUE)
```
remove.cont <- function(GM){
sample_data(GM)$is.neg <- sample_data(GM)$genotype == "nc"
contamdf.prev <- isContaminant(GM, method="prevalence", neg="is.neg", threshold = 0.05)
cont.remove <- subset(contamdf.prev, contaminant == "TRUE")
cont.remove <- row.names(cont.remove)
allTaxa = taxa_names(GM)
allTaxa <- allTaxa[!(allTaxa %in% cont.remove)]
GM <-  prune_taxa(allTaxa, GM)
GM <- subset_samples(GM, genotype != "nc")
return(GM)
}
ps.16s <- remove.cont(ps.16s)
ps.16s <- subset_taxa(ps.16s, Order !="Chloroplast")
ps.16s <- subset_taxa(ps.16s, Family !="Mitochondria")
ps.16s <- filter_taxa(ps.16s, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.18s <- remove.cont(ps.18s)
ps.18s <- subset_taxa(ps.18s, Class !="Streptophyta")
ps.18s <- filter_taxa(ps.18s, function (x) {sum(x > 0) > 1}, prune=TRUE)
GM <- subset_samples(ps.16s, genotype == "Sp21")
cap_ord <- ordinate(physeq = GM, method = "CAP", distance = dist.mat, formula = ~ cage)
cap_plot1 <- plot_ordination(physeq = GM, ordination = cap_ord, axes = c(1,2)) +
theme_bw(base_size = 15) +
stat_ellipse(mapping = aes(color = cage),
alpha = 0.4,
type = "norm",
show.legend=F) +
geom_point(mapping = aes(color = cage), size = 5) +
theme(legend.title= element_blank(),
legend.background = element_rect(color = NA),
legend.text = element_text(size = 12),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
panel.grid = element_blank()) +
scale_color_manual(name = "Legend", values=c("#4daf4a", "#e41a1c"), labels = c("Control", "Herbivory"), breaks = c("ctrl", "herb"))
cap_plot1
GM <- subset_samples(ps.16s, genotype == "Sp21")
dist.mat <- phyloseq::distance(GM, method = "bray")
cap_ord <- ordinate(physeq = GM, method = "CAP", distance = dist.mat, formula = ~ cage)
cap_plot1 <- plot_ordination(physeq = GM, ordination = cap_ord, axes = c(1,2)) +
theme_bw(base_size = 15) +
stat_ellipse(mapping = aes(color = cage),
alpha = 0.4,
type = "norm",
show.legend=F) +
geom_point(mapping = aes(color = cage), size = 5) +
theme(legend.title= element_blank(),
legend.background = element_rect(color = NA),
legend.text = element_text(size = 12),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
panel.grid = element_blank()) +
scale_color_manual(name = "Legend", values=c("#4daf4a", "#e41a1c"), labels = c("Control", "Herbivory"), breaks = c("ctrl", "herb"))
cap_plot1
GM <- subset_samples(ps.16s, genotype == "Sp21")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
GM <- subset_samples(ps.16s, genotype == "Sp65")
dist.mat <- phyloseq::distance(GM, method = "bray")
cap_ord <- ordinate(physeq = GM, method = "CAP", distance = dist.mat, formula = ~ cage)
cap_plot1 <- plot_ordination(physeq = GM, ordination = cap_ord, axes = c(1,2)) +
theme_bw(base_size = 15) +
stat_ellipse(mapping = aes(color = cage),
alpha = 0.4,
type = "norm",
show.legend=F) +
geom_point(mapping = aes(color = cage), size = 5) +
theme(legend.title= element_blank(),
legend.background = element_rect(color = NA),
legend.text = element_text(size = 12),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
panel.grid = element_blank()) +
scale_color_manual(name = "Legend", values=c("#4daf4a", "#e41a1c"), labels = c("Control", "Herbivory"), breaks = c("ctrl", "herb"))
cap_plot1
GM <- subset_samples(ps.16s, genotype == "Sp65")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
library("phyloseq")
library("ggplot2")
library("scales")
library("grid")
library("DESeq2")
library("vegan")
library("ape")
library("plyr")
library("ggpmisc")
library("dplyr")
library("broom")
library("picante")
library("Rmisc")
library("emmeans")
library("car")
library("lme4")
library("tibble")
library("data.table")
library("limma")
library("microbiome")
library("ggvenn")
library("patchwork")
library("RColorBrewer")
library("RVAideMemoire")
library("data.table")
library("decontam")
library("ggpubr")
library("cowplot")
load(file = 'data/ASV_table.rds')
metadata <- read.table("data/metadata_16s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.16s) <- metadata
metadata <- read.table("data/metadata_18s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.18s) <- metadata
remove.cont <- function(GM){
sample_data(GM)$is.neg <- sample_data(GM)$genotype == "nc"
contamdf.prev <- isContaminant(GM, method="prevalence", neg="is.neg", threshold = 0.05)
cont.remove <- subset(contamdf.prev, contaminant == "TRUE")
cont.remove <- row.names(cont.remove)
allTaxa = taxa_names(GM)
allTaxa <- allTaxa[!(allTaxa %in% cont.remove)]
GM <-  prune_taxa(allTaxa, GM)
GM <- subset_samples(GM, genotype != "nc")
return(GM)
}
ps.16s <- remove.cont(ps.16s)
ps.16s <- subset_taxa(ps.16s, Order !="Chloroplast")
ps.16s <- subset_taxa(ps.16s, Family !="Mitochondria")
ps.16s <- filter_taxa(ps.16s, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.18s <- remove.cont(ps.18s)
ps.18s <- subset_taxa(ps.18s, Class !="Streptophyta")
ps.18s <- filter_taxa(ps.18s, function (x) {sum(x > 0) > 1}, prune=TRUE)
GM <- subset_samples(ps.16s, genotype == "Sp21")
dist.mat <- phyloseq::distance(GM, method = "bray")
cap_ord <- ordinate(physeq = GM, method = "CAP", distance = dist.mat, formula = ~ cage)
cap_plot1 <- plot_ordination(physeq = GM, ordination = cap_ord, axes = c(1,2)) +
theme_bw(base_size = 15) +
stat_ellipse(mapping = aes(color = cage),
alpha = 0.4,
type = "norm",
show.legend=F) +
geom_point(mapping = aes(color = cage), size = 5) +
theme(legend.title= element_blank(),
legend.background = element_rect(color = NA),
legend.text = element_text(size = 12),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
panel.grid = element_blank()) +
scale_color_manual(name = "Legend", values=c("#4daf4a", "#e41a1c"), labels = c("Control", "Herbivory"), breaks = c("ctrl", "herb"))
cap_plot1
GM <- subset_samples(ps.16s, genotype == "Sp21")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
GM <- subset_samples(ps.16s, genotype == "Sp65")
dist.mat <- phyloseq::distance(GM, method = "bray")
cap_ord <- ordinate(physeq = GM, method = "CAP", distance = dist.mat, formula = ~ cage)
cap_plot1 <- plot_ordination(physeq = GM, ordination = cap_ord, axes = c(1,2)) +
theme_bw(base_size = 15) +
stat_ellipse(mapping = aes(color = cage),
alpha = 0.4,
type = "norm",
show.legend=F) +
geom_point(mapping = aes(color = cage), size = 5) +
theme(legend.title= element_blank(),
legend.background = element_rect(color = NA),
legend.text = element_text(size = 12),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
panel.grid = element_blank()) +
scale_color_manual(name = "Legend", values=c("#4daf4a", "#e41a1c"), labels = c("Control", "Herbivory"), breaks = c("ctrl", "herb"))
cap_plot1
GM <- subset_samples(ps.16s, genotype == "Sp65")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
cal.diff.taxa <- function(object, direction){
diagdds <- phyloseq_to_deseq2(object, ~ 1)
ts <- counts(diagdds)
geoMeans = apply(ts, 1, function(row) if (all(row == 0)) 0 else exp(mean(log(row[row != 0]))))
diagdds = estimateSizeFactors(diagdds, geoMeans=geoMeans)
diagdds = estimateDispersions(diagdds)
diagdds$group <- factor(paste0(diagdds$cage))
design(diagdds) <- ~ group
dds <-DESeq(diagdds, betaPrior=FALSE, parallel = T)
c1 <- results(dds, contrast=c("group", "herb", "ctrl"), parallel = T)
c1 <- as.data.frame(c1)
c1 <- setDT(c1, keep.rownames = TRUE)[]
c1 <- c1[,c("rn", "log2FoldChange", "padj")]
x <- if(direction == "up"){c1 %>% dplyr::filter(log2FoldChange > 0 & padj < 0.05)} else if(direction == "down"){c1 %>% dplyr::filter(log2FoldChange < 0 & padj < 0.05)}
tax.table <- as.data.frame(tax_table(object))
tx <- tax.table[which(row.names(tax.table) %in% x$rn),]
return(tx)
}
create_dt <- function(x){
DT::datatable(x,
extensions = 'Buttons',
options = list(dom = 'Blfrtip',
buttons = c('copy', 'csv', 'excel'),
lengthMenu = list(c(10,25,50,-1),
c(10,25,50,"All"))))
}
GM <- subset_samples(ps.16s, genotype == "Sp21")
cal.diff.taxa(GM, "up") %>% create_dt
GM <- subset_samples(ps.16s, genotype == "Sp21")
cal.diff.taxa(GM, "down") %>% create_dt
GM <- subset_samples(ps.16s, genotype == "Sp65")
cal.diff.taxa(GM, "up") %>% create_dt
GM <- subset_samples(ps.16s, genotype == "Sp65")
cal.diff.taxa(GM, "down") %>% create_dt
GM <- subset_samples(ps.18s, genotype == "Sp21")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
GM <- subset_samples(ps.18s, genotype == "Sp65")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
GM <- subset_samples(ps.18s, genotype == "Sp21")
cal.diff.taxa(GM, "up") %>% create_dt
GM <- subset_samples(ps.18s, genotype == "Sp21")
cal.diff.taxa(GM, "down") %>% create_dt
GM <- subset_samples(ps.18s, genotype == "Sp65")
cal.diff.taxa(GM, "up") %>% create_dt
GM <- subset_samples(ps.18s, genotype == "Sp65")
cal.diff.taxa(GM, "down") %>% create_dt
load(file = 'data/ASV_table.rds')
metadata <- read.table("data/metadata_16s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.16s) <- metadata
metadata <- read.table("data/metadata_18s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.18s) <- metadata
remove.cont <- function(GM){
sample_data(GM)$is.neg <- sample_data(GM)$genotype == "nc"
contamdf.prev <- isContaminant(GM, method="prevalence", neg="is.neg", threshold = 0.05)
cont.remove <- subset(contamdf.prev, contaminant == "TRUE")
cont.remove <- row.names(cont.remove)
allTaxa = taxa_names(GM)
allTaxa <- allTaxa[!(allTaxa %in% cont.remove)]
GM <-  prune_taxa(allTaxa, GM)
GM <- subset_samples(GM, genotype != "nc")
return(GM)
}
ps.16s <- remove.cont(ps.16s)
ps.16s <- subset_taxa(ps.16s, Order !="Chloroplast")
ps.16s <- subset_taxa(ps.16s, Family !="Mitochondria")
ps.16s <- filter_taxa(ps.16s, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.18s <- remove.cont(ps.18s)
ps.18s <- subset_taxa(ps.18s, Class !="Streptophyta")
ps.18s <- subset_taxa(ps.18s, Phylum !="Opisthokonta")
ps.18s <- filter_taxa(ps.18s, function (x) {sum(x > 0) > 1}, prune=TRUE)
GM <- subset_samples(ps.18s, genotype == "Sp21")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
GM <- subset_samples(ps.18s, genotype == "Sp65")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
GM <- subset_samples(ps.18s, genotype == "Sp21")
cal.diff.taxa(GM, "up") %>% create_dt
GM <- subset_samples(ps.18s, genotype == "Sp21")
cal.diff.taxa(GM, "up") %>% create_dt
load(file = 'data/ASV_table.rds')
metadata <- read.table("data/metadata_16s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.16s) <- metadata
metadata <- read.table("data/metadata_18s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.18s) <- metadata
```R
remove.cont <- function(GM){
sample_data(GM)$is.neg <- sample_data(GM)$genotype == "nc"
contamdf.prev <- isContaminant(GM, method="prevalence", neg="is.neg", threshold = 0.05)
cont.remove <- subset(contamdf.prev, contaminant == "TRUE")
cont.remove <- row.names(cont.remove)
allTaxa = taxa_names(GM)
allTaxa <- allTaxa[!(allTaxa %in% cont.remove)]
GM <-  prune_taxa(allTaxa, GM)
GM <- subset_samples(GM, genotype != "nc")
return(GM)
}
ps.16s <- remove.cont(ps.16s)
ps.16s <- subset_taxa(ps.16s, Order !="Chloroplast")
ps.16s <- subset_taxa(ps.16s, Family !="Mitochondria")
ps.16s <- filter_taxa(ps.16s, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.18s <- remove.cont(ps.18s)
ps.18s <- subset_taxa(ps.18s, Class !="Streptophyta")
ps.18s <- subset_taxa(ps.18s, Phylum !="Opisthokonta")
ps.18s <- filter_taxa(ps.18s, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.18s
load(file = 'data/ASV_table.rds')
metadata <- read.table("data/metadata_16s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.16s) <- metadata
metadata <- read.table("data/metadata_18s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.18s) <- metadata
remove.cont <- function(GM){
sample_data(GM)$is.neg <- sample_data(GM)$genotype == "nc"
contamdf.prev <- isContaminant(GM, method="prevalence", neg="is.neg", threshold = 0.05)
cont.remove <- subset(contamdf.prev, contaminant == "TRUE")
cont.remove <- row.names(cont.remove)
allTaxa = taxa_names(GM)
allTaxa <- allTaxa[!(allTaxa %in% cont.remove)]
GM <-  prune_taxa(allTaxa, GM)
GM <- subset_samples(GM, genotype != "nc")
return(GM)
}
ps.16s <- remove.cont(ps.16s)
ps.16s <- subset_taxa(ps.16s, Order !="Chloroplast")
ps.16s <- subset_taxa(ps.16s, Family !="Mitochondria")
ps.16s <- filter_taxa(ps.16s, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.18s <- remove.cont(ps.18s)
ps.18s <- subset_taxa(ps.18s, Class !="Streptophyta")
ps.18s <- subset_taxa(ps.18s, Phylum !="Archaeplastida")
ps.18s <- filter_taxa(ps.18s, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.18s
GM <- subset_samples(ps.18s, genotype == "Sp21")
cal.diff.taxa(GM, "up") %>% create_dt
create_dt <- function(x){
DT::datatable(x,
extensions = 'Buttons',
options = list(dom = 'Blfrtip',
buttons = c('copy', 'csv', 'excel'),
lengthMenu = list(c(10,25,50,-1),
c(10,25,50,"All"))))
}
GM <- subset_samples(ps.18s, genotype == "Sp21")
cal.diff.taxa(GM, "up") %>% create_dt
cal.diff.taxa <- function(object, direction){
diagdds <- phyloseq_to_deseq2(object, ~ 1)
ts <- counts(diagdds)
geoMeans = apply(ts, 1, function(row) if (all(row == 0)) 0 else exp(mean(log(row[row != 0]))))
diagdds = estimateSizeFactors(diagdds, geoMeans=geoMeans)
diagdds = estimateDispersions(diagdds)
diagdds$group <- factor(paste0(diagdds$cage))
design(diagdds) <- ~ group
dds <-DESeq(diagdds, betaPrior=FALSE, parallel = T)
c1 <- results(dds, contrast=c("group", "herb", "ctrl"), parallel = T)
c1 <- as.data.frame(c1)
c1 <- setDT(c1, keep.rownames = TRUE)[]
c1 <- c1[,c("rn", "log2FoldChange", "padj")]
x <- if(direction == "up"){c1 %>% dplyr::filter(log2FoldChange > 0 & padj < 0.05)} else if(direction == "down"){c1 %>% dplyr::filter(log2FoldChange < 0 & padj < 0.05)}
tax.table <- as.data.frame(tax_table(object))
tx <- tax.table[which(row.names(tax.table) %in% x$rn),]
return(tx)
}
create_dt <- function(x){
DT::datatable(x,
extensions = 'Buttons',
options = list(dom = 'Blfrtip',
buttons = c('copy', 'csv', 'excel'),
lengthMenu = list(c(10,25,50,-1),
c(10,25,50,"All"))))
}
GM <- subset_samples(ps.18s, genotype == "Sp21")
cal.diff.taxa(GM, "up") %>% create_dt
GM <- subset_samples(ps.18s, genotype == "Sp21")
cal.diff.taxa(GM, "down") %>% create_dt
load(file = 'data/ASV_table.rds')
metadata <- read.table("data/metadata_16s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.16s) <- metadata
metadata <- read.table("data/metadata_18s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.18s) <- metadata
remove.cont <- function(GM){
sample_data(GM)$is.neg <- sample_data(GM)$genotype == "nc"
contamdf.prev <- isContaminant(GM, method="prevalence", neg="is.neg", threshold = 0.05)
cont.remove <- subset(contamdf.prev, contaminant == "TRUE")
cont.remove <- row.names(cont.remove)
allTaxa = taxa_names(GM)
allTaxa <- allTaxa[!(allTaxa %in% cont.remove)]
GM <-  prune_taxa(allTaxa, GM)
GM <- subset_samples(GM, genotype != "nc")
return(GM)
}
ps.16s <- remove.cont(ps.16s)
ps.16s <- subset_taxa(ps.16s, Order !="Chloroplast")
ps.16s <- subset_taxa(ps.16s, Family !="Mitochondria")
ps.16s <- filter_taxa(ps.16s, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.18s <- remove.cont(ps.18s)
ps.18s <- subset_taxa(ps.18s, Class !="Streptophyta")
ps.18s <- subset_taxa(ps.18s, Phylum !="Opisthokonta")
ps.18s <- filter_taxa(ps.18s, function (x) {sum(x > 0) > 1}, prune=TRUE)
GM <- subset_samples(ps.18s, genotype == "Sp21")
cal.diff.taxa(GM, "up") %>% create_dt
GM <- subset_samples(ps.18s, genotype == "Sp21")
cal.diff.taxa(GM, "down") %>% create_dt
ps.18s
GM <- subset_samples(ps.18s, genotype == "Sp65")
cal.diff.taxa(GM, "up") %>% create_dt
GM <- subset_samples(ps.18s, genotype == "Sp65")
cal.diff.taxa(GM, "down") %>% create_dt
GM <- subset_samples(ps.16s, genotype == "Sp21")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
GM <- subset_samples(ps.16s, genotype == "Sp65")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
load(file = 'data/ASV_table.rds')
metadata <- read.table("data/metadata_16s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.16s) <- metadata
metadata <- read.table("data/metadata_18s.txt", sep = "\t", header = T, row.names = 1)
sample_data(ps.18s) <- metadata
remove.cont <- function(GM){
sample_data(GM)$is.neg <- sample_data(GM)$genotype == "nc"
contamdf.prev <- isContaminant(GM, method="prevalence", neg="is.neg", threshold = 0.05)
cont.remove <- subset(contamdf.prev, contaminant == "TRUE")
cont.remove <- row.names(cont.remove)
allTaxa = taxa_names(GM)
allTaxa <- allTaxa[!(allTaxa %in% cont.remove)]
GM <-  prune_taxa(allTaxa, GM)
GM <- subset_samples(GM, genotype != "nc")
return(GM)
}
ps.16s <- remove.cont(ps.16s)
ps.16s <- subset_taxa(ps.16s, Order !="Chloroplast")
ps.16s <- subset_taxa(ps.16s, Family !="Mitochondria")
ps.16s <- filter_taxa(ps.16s, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.18s <- remove.cont(ps.18s)
ps.18s <- subset_taxa(ps.18s, Class !="Streptophyta")
ps.18s <- filter_taxa(ps.18s, function (x) {sum(x > 0) > 1}, prune=TRUE)
GM <- subset_samples(ps.16s, genotype == "Sp65")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
GM <- subset_samples(ps.18s, genotype == "Sp21")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
GM <- subset_samples(ps.18s, genotype == "Sp65")
sampledf <- data.frame(sample_data(GM))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
setBlocks(perm) <- with(sampledf, pond)
set.seed(100)
pmv <- adonis2(dist.mat ~ cage, data = sampledf, permutations = perm)
pmv
