library("dplyr")
library("reshape")
library("ggplot2")
library("lme4")
library("car")
library("emmeans")
library("cowplot")
library("ggpubr")
single.gen.fun <- function(x, y, z){
df1 <- read.table(x)
df2 <- read.table(y)
df3 <- read.table(z)
colnames(df1) <- c("position", "begin", "end", "Sp21", "Sp56", "Sp58", "Sp65")
colnames(df2) <- c("position", "begin", "end", "Sp21", "Sp56", "Sp58", "Sp65")
colnames(df3) <- c("position", "begin", "end", "Sp21", "Sp56", "Sp58", "Sp65")
df.genotype <- df1
df.genotype$Sp21 <- rowMeans(cbind(df1$Sp21, df2$Sp21, df3$Sp21))
df.genotype$Sp56 <- rowMeans(cbind(df1$Sp56, df2$Sp56, df3$Sp56))
df.genotype$Sp58 <- rowMeans(cbind(df1$Sp58, df2$Sp58, df3$Sp58))
df.genotype$Sp65 <- rowMeans(cbind(df1$Sp65, df2$Sp65, df3$Sp65))
df.genotype <- df.genotype %>% filter_at(vars(4:7), any_vars(. > 0.90))
df.genotype$position <- paste(df.genotype$position, df.genotype$begin, df.genotype$end, sep = "_")
df.genotype$begin <- NULL
df.genotype$end <- NULL
return(df.genotype)
}
df.Sp21 <- single.gen.fun("data_HAFpipe/A_7.txt", "data_HAFpipe/A_8.txt", "data_HAFpipe/A_9.txt")
df.Sp56 <- single.gen.fun("data_HAFpipe/A_10.txt", "data_HAFpipe/A_11.txt", "data_HAFpipe/A_12.txt")
df.Sp58 <- single.gen.fun("data_HAFpipe/A_13.txt", "data_HAFpipe/A_14.txt", "data_HAFpipe/A_15.txt")
df.Sp65 <- single.gen.fun("data_HAFpipe/A_16.txt", "data_HAFpipe/A_17.txt", "data_HAFpipe/A_18.txt")
comvals <- Reduce(intersect, list(df.Sp21$position, df.Sp56$position, df.Sp58$position, df.Sp65$position))
files <- dir(path = "data_HAFpipe", pattern = "*.txt")
data <- sapply(files, function(x){
raw.data <- read.table(paste0("data_HAFpipe/", x))
colnames(raw.data) <- c("position", "begin", "end", "Sp21", "Sp56", "Sp58", "Sp65")
raw.data$position <- paste(raw.data$position, raw.data$begin, raw.data$end, sep = "_")
raw.data$sample <- paste0(x)
raw.data$sample  <- sub('\\.[^.]+$', '', raw.data$sample)
raw.data$begin <- NULL
raw.data$end <- NULL
return(raw.data)},
simplify = FALSE,USE.NAMES = TRUE)
data <- Reduce(function(x,y) {rbind(x,y)}, data)
data <- data[which(data$position %in% comvals),]
data$position <- NULL
df <- data %>% group_by(sample) %>% summarize(Sp21 = mean(Sp21),
Sp56 = mean(Sp56),
Sp58 = mean(Sp58),
Sp65 = mean(Sp65))
metadata <- read.table("metadata.txt", header = T)
df2 <- merge(metadata, df, by.x = "SampleID", by.y = "sample")
colnames(df2)
mdata <- melt(df2, id=c("SampleID", "category", "pond", "cage", "week"))
metadata <- read.table("reference/metadata.txt", header = T)
df2 <- merge(metadata, df, by.x = "SampleID", by.y = "sample")
colnames(df2)
mdata <- melt(df2, id=c("SampleID", "category", "pond", "cage", "week"))
metadata <- read.table("reference/metadata.txt", header = T)
df2 <- merge(metadata, df, by.x = "SampleID", by.y = "sample")
colnames(df2)
mdata <- melt(df2, id=c("SampleID", "category", "pond", "cage", "week"))
mdata4 <- mdata[which(mdata$category == "mix"),]
mdata4 <- mdata4 %>% group_by(cage, week, variable) %>% summarise(value = mean(value))
mdata4 <- mdata4[which(mdata4$cage == "mix_pond"),]
mdata4 <- mdata4 %>% mutate(value = 0.25/value)
mdata0 <- mdata[which(mdata$cage == "mix_pond"),]
mdata0 <- merge(mdata0, mdata4, by = "variable") %>% mutate(value = value.x * value.y)
mdata0 <- mdata0 %>% select(SampleID, pond, cage.x, week.x, variable, value)
colnames(mdata0) <- c("sampleID", "pond", "cage", "week", "genotype", "value")
mdata2 <- mdata[which(mdata$category == "pond"),]
mdata2 <- merge(mdata2, mdata4, by = "variable") %>% mutate(value = value.x * value.y)
mdata2 <- mdata2 %>% select(SampleID, pond, cage.x, week.x, variable, value)
colnames(mdata2) <- c("sampleID", "pond", "cage", "week", "genotype", "value")
mdata.df <- rbind(mdata0, mdata2)
plot.fun <- function(gtype, ylabel, siglabel){
mdata.plot <- mdata.df %>% filter(genotype == gtype)
px <- ggplot(mdata.plot, aes(x = week, y = value, fill = cage, color = cage)) +
theme_bw(base_size = 14) +
stat_summary(fun = mean, geom = "pointrange", fun.max = function(x) mean(x) + sd(x), fun.min = function(x) mean(x) - sd(x), position=position_dodge(0)) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
legend.position = "none",
panel.grid = element_blank()) +
scale_fill_manual(name = "Legend", values=c("#252525", "#4daf4a", "#e41a1c"), labels = c("Starting", "Control", "Herbivory"), breaks = c("mix_pond", "A_ctr", "B_herb")) +
scale_color_manual(name = "Legend", values=c("#252525", "#4daf4a", "#e41a1c"), labels = c("Starting", "Control", "Herbivory"), breaks = c("mix_pond", "A_ctr", "B_herb")) +
scale_x_discrete(name = "Legend", labels = c("0", "8", "12"), breaks = c("w0", "w08", "w12")) +
geom_segment(aes(x=1,xend=2,
y= mean(mdata.plot[which(mdata.plot$cage == "mix_pond" & mdata.plot$week == "w0"),]$value),
yend=mean(mdata.plot[which(mdata.plot$cage == "A_ctr" & mdata.plot$week == "w08"),]$value)),
color = "#4daf4a") +
geom_segment(aes(x=2,xend=3,
y= mean(mdata.plot[which(mdata.plot$cage == "A_ctr" & mdata.plot$week == "w08"),]$value),
yend=mean(mdata.plot[which(mdata.plot$cage == "A_ctr" & mdata.plot$week == "w12"),]$value)),
color = "#4daf4a") +
geom_segment(aes(x=1,xend=2,
y= mean(mdata.plot[which(mdata.plot$cage == "mix_pond" & mdata.plot$week == "w0"),]$value),
yend=mean(mdata.plot[which(mdata.plot$cage == "B_herb" & mdata.plot$week == "w08"),]$value)),
color = "#e41a1c") +
geom_segment(aes(x=2,xend=3,
y= mean(mdata.plot[which(mdata.plot$cage == "B_herb" & mdata.plot$week == "w08"),]$value),
yend=mean(mdata.plot[which(mdata.plot$cage == "B_herb" & mdata.plot$week == "w12"),]$value)),
color = "#e41a1c") +
annotate("text", x = 3.3,
y =  (mean(mdata.plot[which(mdata.plot$cage == "A_ctr" & mdata.plot$week == "w12"),]$value) +
mean(mdata.plot[which(mdata.plot$cage == "B_herb" & mdata.plot$week == "w12"),]$value))/2,
label = paste0(siglabel), size = 5) +
ggtitle(paste0(gtype)) +
ylim(0,0.6) +
labs(y = paste0(ylabel))
return(px)
}
px1 <- plot.fun("Sp21", "Genotype frequency", " ")
px2 <- plot.fun("Sp56", " ", " ")
px3 <- plot.fun("Sp58", "Genotype frequency", " ")
px4 <- plot.fun("Sp65", " ", " ")
px <- ggarrange(px1, px2, px3, px4,
ncol = 2, nrow = 2,  labels = c("a.", "b.", "c.", "d."), common.legend = T)
px
mdata.df2 <- mdata.df[which(mdata.df$cage != "mix_pond"),]
model <- lmer(value ~ cage * genotype * (1|week) * (1|pond), data = mdata.df2)
Anova(model)
m1 <- emmeans(model, "cage" , by = c("genotype"))
pairs(m1)
library("purrr")
library("ape")
library("car")
library("data.table")
library("DESeq2")
library("dplyr")
library("emmeans")
library("ggplot2")
library("ggpmisc")
library("ggpubr")
library("grid")
library("lme4")
library("phyloseq")
library("picante")
library("plyr")
library("Rmisc")
library("tidyr")
library("tibble")
library("vegan")
library("Hmisc")
library("limma")
library("scales")
library("RVAideMemoire")
load(file = 'data_kraken/kraken_bacteria_fungi.rds')
kraken.tax <- read.table("data_kraken/taxa_bacteria_fungi.txt", header = T, row.names = NULL)
GM.kracken <- subset_samples(GM.kracken, category =="pond")
GM.kracken <- filter_taxa(GM.kracken, function (x) {sum(x > 0) > 1}, prune=TRUE)
norm.deseq <- function(x){
diagdds = phyloseq_to_deseq2(x, ~ 1)
ts = counts(diagdds)
geoMeans = apply(ts, 1, function(row) if (all(row == 0)) 0 else exp(mean(log(row[row != 0]))))
diagdds = estimateSizeFactors(diagdds, geoMeans=geoMeans)
diagdds = estimateDispersions(diagdds)
diagvst = getVarianceStabilizedData(diagdds)
diagdds.c <- removeBatchEffect(diagvst)
diagdds.c[diagdds.c<0] <- 0
ps.16Sn <- x
otu_table(ps.16Sn) <- otu_table(diagdds.c, taxa_are_rows = TRUE)
}
GM <- norm.deseq(GM.kracken)
sampledf <- data.frame(sample_data(GM.kracken))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
set.seed(100)
setBlocks(perm) <- with(sampledf, pond)
pmv <- adonis2(dist.mat ~  cage * week, data = sampledf, permutations = perm)
pmv
load(file = 'data_kraken/kraken_algae.rds')
kraken.tax <- read.table("data_kraken/taxa_algae.txt", header = T, row.names = NULL)
GM.kracken <- subset_samples(GM.kracken, category =="pond")
GM.kracken <- filter_taxa(GM.kracken, function (x) {sum(x > 0) > 1}, prune=TRUE)
norm.deseq <- function(x){
diagdds = phyloseq_to_deseq2(x, ~ 1)
ts = counts(diagdds)
geoMeans = apply(ts, 1, function(row) if (all(row == 0)) 0 else exp(mean(log(row[row != 0]))))
diagdds = estimateSizeFactors(diagdds, geoMeans=geoMeans)
diagdds = estimateDispersions(diagdds)
diagvst = getVarianceStabilizedData(diagdds)
diagdds.c <- removeBatchEffect(diagvst)
diagdds.c[diagdds.c<0] <- 0
ps.16Sn <- x
otu_table(ps.16Sn) <- otu_table(diagdds.c, taxa_are_rows = TRUE)
}
GM <- norm.deseq(GM.kracken)
sampledf <- data.frame(sample_data(GM.kracken))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
set.seed(100)
setBlocks(perm) <- with(sampledf, pond)
pmv <- adonis2(dist.mat ~  cage * week, data = sampledf, permutations = perm)
pmv
library("dplyr")
library("reshape")
library("ggplot2")
library("lme4")
library("car")
library("emmeans")
library("cowplot")
library("ggpubr")
single.gen.fun <- function(x, y, z){
df1 <- read.table(x)
df2 <- read.table(y)
df3 <- read.table(z)
colnames(df1) <- c("position", "begin", "end", "Sp21", "Sp56", "Sp58", "Sp65")
colnames(df2) <- c("position", "begin", "end", "Sp21", "Sp56", "Sp58", "Sp65")
colnames(df3) <- c("position", "begin", "end", "Sp21", "Sp56", "Sp58", "Sp65")
df.genotype <- df1
df.genotype$Sp21 <- rowMeans(cbind(df1$Sp21, df2$Sp21, df3$Sp21))
df.genotype$Sp56 <- rowMeans(cbind(df1$Sp56, df2$Sp56, df3$Sp56))
df.genotype$Sp58 <- rowMeans(cbind(df1$Sp58, df2$Sp58, df3$Sp58))
df.genotype$Sp65 <- rowMeans(cbind(df1$Sp65, df2$Sp65, df3$Sp65))
df.genotype <- df.genotype %>% filter_at(vars(4:7), any_vars(. > 0.90))
df.genotype$position <- paste(df.genotype$position, df.genotype$begin, df.genotype$end, sep = "_")
df.genotype$begin <- NULL
df.genotype$end <- NULL
return(df.genotype)
}
df.Sp21 <- single.gen.fun("data_HAFpipe/A_7.txt", "data_HAFpipe/A_8.txt", "data_HAFpipe/A_9.txt")
df.Sp56 <- single.gen.fun("data_HAFpipe/A_10.txt", "data_HAFpipe/A_11.txt", "data_HAFpipe/A_12.txt")
df.Sp58 <- single.gen.fun("data_HAFpipe/A_13.txt", "data_HAFpipe/A_14.txt", "data_HAFpipe/A_15.txt")
df.Sp65 <- single.gen.fun("data_HAFpipe/A_16.txt", "data_HAFpipe/A_17.txt", "data_HAFpipe/A_18.txt")
comvals <- Reduce(intersect, list(df.Sp21$position, df.Sp56$position, df.Sp58$position, df.Sp65$position))
files <- dir(path = "data_HAFpipe", pattern = "*.txt")
data <- sapply(files, function(x){
raw.data <- read.table(paste0("data_HAFpipe/", x))
colnames(raw.data) <- c("position", "begin", "end", "Sp21", "Sp56", "Sp58", "Sp65")
raw.data$position <- paste(raw.data$position, raw.data$begin, raw.data$end, sep = "_")
raw.data$sample <- paste0(x)
raw.data$sample  <- sub('\\.[^.]+$', '', raw.data$sample)
raw.data$begin <- NULL
raw.data$end <- NULL
return(raw.data)},
simplify = FALSE,USE.NAMES = TRUE)
data <- Reduce(function(x,y) {rbind(x,y)}, data)
data <- data[which(data$position %in% comvals),]
data$position <- NULL
df <- data %>% group_by(sample) %>% summarize(Sp21 = mean(Sp21),
Sp56 = mean(Sp56),
Sp58 = mean(Sp58),
Sp65 = mean(Sp65))
metadata <- read.table("reference/metadata.txt", header = T)
df2 <- merge(metadata, df, by.x = "SampleID", by.y = "sample")
colnames(df2)
mdata <- melt(df2, id=c("SampleID", "category", "pond", "cage", "week"))
mdata4 <- mdata[which(mdata$category == "mix"),]
mdata4 <- mdata4 %>% group_by(cage, week, variable) %>% summarise(value = mean(value))
mdata4 <- mdata4[which(mdata4$cage == "mix_pond"),]
mdata4 <- mdata4 %>% mutate(value = 0.25/value)
mdata0 <- mdata[which(mdata$cage == "mix_pond"),]
mdata0 <- merge(mdata0, mdata4, by = "variable") %>% mutate(value = value.x * value.y)
mdata0 <- mdata0 %>% select(SampleID, pond, cage.x, week.x, variable, value)
colnames(mdata0) <- c("sampleID", "pond", "cage", "week", "genotype", "value")
mdata2 <- mdata[which(mdata$category == "pond"),]
mdata2 <- merge(mdata2, mdata4, by = "variable") %>% mutate(value = value.x * value.y)
mdata2 <- mdata2 %>% select(SampleID, pond, cage.x, week.x, variable, value)
colnames(mdata2) <- c("sampleID", "pond", "cage", "week", "genotype", "value")
mdata.df <- rbind(mdata0, mdata2)
plot.fun <- function(gtype, ylabel, siglabel){
mdata.plot <- mdata.df %>% filter(genotype == gtype)
px <- ggplot(mdata.plot, aes(x = week, y = value, fill = cage, color = cage)) +
theme_bw(base_size = 14) +
stat_summary(fun = mean, geom = "pointrange", fun.max = function(x) mean(x) + sd(x), fun.min = function(x) mean(x) - sd(x), position=position_dodge(0)) +
theme(axis.title.x=element_blank(),
axis.text.x = element_text(color="black"),
axis.text.y = element_text(color="black"),
axis.title.y = element_text(color="black"),
legend.position = "none",
panel.grid = element_blank()) +
scale_fill_manual(name = "Legend", values=c("#252525", "#4daf4a", "#e41a1c"), labels = c("Starting", "Control", "Herbivory"), breaks = c("mix_pond", "A_ctr", "B_herb")) +
scale_color_manual(name = "Legend", values=c("#252525", "#4daf4a", "#e41a1c"), labels = c("Starting", "Control", "Herbivory"), breaks = c("mix_pond", "A_ctr", "B_herb")) +
scale_x_discrete(name = "Legend", labels = c("0", "8", "12"), breaks = c("w0", "w08", "w12")) +
geom_segment(aes(x=1,xend=2,
y= mean(mdata.plot[which(mdata.plot$cage == "mix_pond" & mdata.plot$week == "w0"),]$value),
yend=mean(mdata.plot[which(mdata.plot$cage == "A_ctr" & mdata.plot$week == "w08"),]$value)),
color = "#4daf4a") +
geom_segment(aes(x=2,xend=3,
y= mean(mdata.plot[which(mdata.plot$cage == "A_ctr" & mdata.plot$week == "w08"),]$value),
yend=mean(mdata.plot[which(mdata.plot$cage == "A_ctr" & mdata.plot$week == "w12"),]$value)),
color = "#4daf4a") +
geom_segment(aes(x=1,xend=2,
y= mean(mdata.plot[which(mdata.plot$cage == "mix_pond" & mdata.plot$week == "w0"),]$value),
yend=mean(mdata.plot[which(mdata.plot$cage == "B_herb" & mdata.plot$week == "w08"),]$value)),
color = "#e41a1c") +
geom_segment(aes(x=2,xend=3,
y= mean(mdata.plot[which(mdata.plot$cage == "B_herb" & mdata.plot$week == "w08"),]$value),
yend=mean(mdata.plot[which(mdata.plot$cage == "B_herb" & mdata.plot$week == "w12"),]$value)),
color = "#e41a1c") +
annotate("text", x = 3.3,
y =  (mean(mdata.plot[which(mdata.plot$cage == "A_ctr" & mdata.plot$week == "w12"),]$value) +
mean(mdata.plot[which(mdata.plot$cage == "B_herb" & mdata.plot$week == "w12"),]$value))/2,
label = paste0(siglabel), size = 5) +
ggtitle(paste0(gtype)) +
ylim(0,0.6) +
labs(y = paste0(ylabel))
return(px)
}
px1 <- plot.fun("Sp21", "Genotype frequency", " ")
px2 <- plot.fun("Sp56", " ", " ")
px3 <- plot.fun("Sp58", "Genotype frequency", " ")
px4 <- plot.fun("Sp65", " ", " ")
px <- ggarrange(px1, px2, px3, px4,
ncol = 2, nrow = 2,  labels = c("a.", "b.", "c.", "d."), common.legend = T)
px
mdata.df2 <- mdata.df[which(mdata.df$cage != "mix_pond"),]
model <- lmer(value ~ cage * genotype * (1|week) * (1|pond), data = mdata.df2)
Anova(model)
m1 <- emmeans(model, "cage" , by = c("genotype"))
pairs(m1)
library("purrr")
library("ape")
library("car")
library("data.table")
library("DESeq2")
library("dplyr")
library("emmeans")
library("ggplot2")
library("ggpmisc")
library("ggpubr")
library("grid")
library("lme4")
library("phyloseq")
library("picante")
library("plyr")
library("Rmisc")
library("tidyr")
library("tibble")
library("vegan")
library("Hmisc")
library("limma")
library("scales")
library("RVAideMemoire")
load(file = 'data_kraken/kraken_bacteria_fungi.rds')
kraken.tax <- read.table("data_kraken/taxa_bacteria_fungi.txt", header = T, row.names = NULL)
GM.kracken <- subset_samples(GM.kracken, category =="pond")
GM.kracken <- filter_taxa(GM.kracken, function (x) {sum(x > 0) > 1}, prune=TRUE)
norm.deseq <- function(x){
diagdds = phyloseq_to_deseq2(x, ~ 1)
ts = counts(diagdds)
geoMeans = apply(ts, 1, function(row) if (all(row == 0)) 0 else exp(mean(log(row[row != 0]))))
diagdds = estimateSizeFactors(diagdds, geoMeans=geoMeans)
diagdds = estimateDispersions(diagdds)
diagvst = getVarianceStabilizedData(diagdds)
diagdds.c <- removeBatchEffect(diagvst)
diagdds.c[diagdds.c<0] <- 0
ps.16Sn <- x
otu_table(ps.16Sn) <- otu_table(diagdds.c, taxa_are_rows = TRUE)
}
GM <- norm.deseq(GM.kracken)
sampledf <- data.frame(sample_data(GM.kracken))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
set.seed(100)
setBlocks(perm) <- with(sampledf, pond)
pmv <- adonis2(dist.mat ~  cage * week, data = sampledf, permutations = perm)
pmv
load(file = 'data_kraken/kraken_algae.rds')
kraken.tax <- read.table("data_kraken/taxa_algae.txt", header = T, row.names = NULL)
GM.kracken <- subset_samples(GM.kracken, category =="pond")
GM.kracken <- filter_taxa(GM.kracken, function (x) {sum(x > 0) > 1}, prune=TRUE)
norm.deseq <- function(x){
diagdds = phyloseq_to_deseq2(x, ~ 1)
ts = counts(diagdds)
geoMeans = apply(ts, 1, function(row) if (all(row == 0)) 0 else exp(mean(log(row[row != 0]))))
diagdds = estimateSizeFactors(diagdds, geoMeans=geoMeans)
diagdds = estimateDispersions(diagdds)
diagvst = getVarianceStabilizedData(diagdds)
diagdds.c <- removeBatchEffect(diagvst)
diagdds.c[diagdds.c<0] <- 0
ps.16Sn <- x
otu_table(ps.16Sn) <- otu_table(diagdds.c, taxa_are_rows = TRUE)
}
GM <- norm.deseq(GM.kracken)
sampledf <- data.frame(sample_data(GM.kracken))
dist.mat <- phyloseq::distance(GM, method = "bray")
perm <- how(nperm = 999)
set.seed(100)
setBlocks(perm) <- with(sampledf, pond)
pmv <- adonis2(dist.mat ~  cage * week, data = sampledf, permutations = perm)
pmv
